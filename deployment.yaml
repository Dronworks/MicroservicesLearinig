apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
  labels:
    app: currency-conversion
  name: currency-conversion
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
    # Deployment settings applicable for all pods with matching labels
      app: currency-conversion
  strategy:
  # How the update to this application is done
    rollingUpdate:
      # How many new instances created during the update
      maxSurge: 25%
      # How many previous may be unavailable during the release
      maxUnavailable: 25%
    type: RollingUpdate
  template:
  # Template of matching pods for those deployment settings
    metadata:
      labels:
        app: currency-conversion
    spec:
    # Containers information, Can be multiple containers inside a pod
      containers:
      # Can redeploy new image from here, just change the version :)))
      - image: dronworks/mmv2-currency-conversion-service:0.0.14-SNAPSHOT
        imagePullPolicy: IfNotPresent
        name: mmv2-currency-conversion-service
        envFrom:
          - configMapRef:
              name: currency-conversion
        # env:
        #   - name: CURRENCY_EXCHANGE_URI
        #     # The value we can get from kubectl get service. And we will get the service name.
        #     value: http://currency-exchange
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    cloud.google.com/neg: '{"ingress":true}'
  labels:
    app: currency-conversion
  name: currency-conversion
  namespace: default
spec:
  ipFamilies:
  - IPv4
  ipFamilyPolicy: SingleStack
  ports:
  # On these ports expose deployments which are matching the lable (selector)
  - port: 8100
    protocol: TCP
    targetPort: 8100
  selector:
    app: currency-conversion
  sessionAffinity: None
  type: LoadBalancer
---
apiVersion: v1
data:
  CURRENCY_EXCHANGE_URI: http://currency-exchange
kind: ConfigMap
metadata:
  name: currency-conversion
  namespace: default

